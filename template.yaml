AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

Resources:
  # Explicit IAM Role for CodeDeploy with AWS-Managed Policies + Custom Inline Policies
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess

  # IAM Role for Lambda Functions
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'LambdaCodeDeployPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # Permission to signal CodeDeploy status
              - Effect: 'Allow'
                Action:
                  - 'codedeploy:PutLifecycleEventHookExecutionStatus'
                Resource: '*'
              # Permission to log to CloudWatch
              - Effect: 'Allow'
                Action:
                  - 'logs:*'
                Resource: '*'
              # Lambda permissions to interact with CodeDeploy and other necessary services
              - Effect: 'Allow'
                Action:
                  - 'lambda:InvokeFunction'
                Resource: '*'
              # Allow Lambda functions to read deployment metadata
              - Effect: 'Allow'
                Action:
                  - 'codedeploy:GetDeployment'
                Resource: '*'
                
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
      AutoPublishAlias: live # Required for DeploymentPreference
      DeploymentPreference:
        Enabled: true
        Type: Canary10Percent5Minutes # Options: Canary10Percent5Minutes, Linear10PercentEvery1Minute, etc.
        Role: !GetAtt CodeDeployServiceRole.Arn # Reference the custom role here
        Hooks:
          PreTraffic: !Ref PreTrafficHookFunction
          PostTraffic: !Ref PostTrafficHookFunction
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - app.ts

  PreTrafficHookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hooks/
      Handler: preHook.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Timeout: 60
      Role: !GetAtt LambdaExecutionRole.Arn
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - preHook.ts

  PostTrafficHookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hooks/
      Handler: postHook.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Timeout: 60
      Role: !GetAtt LambdaExecutionRole.Arn
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - postHook.ts

Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
